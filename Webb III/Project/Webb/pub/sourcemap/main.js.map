{"version":3,"sources":["../../src/typescript/admin.ts","admin.js","../../src/typescript/api_values.ts","../../src/typescript/burgerMenu.ts","../../src/typescript/collapsible.ts","../../src/typescript/education.ts","../../src/typescript/extra.ts","../../src/typescript/frontEnd.ts","../../src/typescript/texts.ts","../../src/typescript/webbpages.ts","../../src/typescript/work.ts","../../src/typescript/zfetchcall.ts"],"names":["__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","header_left","document","getElementById","emailInput","passwordInput","submitBtn","loginTest","signInMessage","emailPassword","passwordPassword","passwordForm","passwordMessage","signInUser","event","preventDefault","password","email","fetch","apiLinkSignIn","response","ok","json","data","forEach","user","sessionStorage","setItem","firstname","userID","location","replace","innerHTML","classList","add","string","JSON","stringify","parse","message","changePassword","updatePassword","callURL","callData","callFetch","checkAdmin","getItem","signOut","clear","apiLinkEducation","apiLinkEducationWithID","apiLinkTexts","apiLinkTextsWithID","apiLinkWork","apiLinkIDWork","apiLinkWebbpages","apiLinkWebbpagesWithID","menuBtn","menuList","addEventListener","style","display","transition","screenSize","window","matchMedia","loadMenu","matches","addListener","liEl","createElement","prepend","iii","btn","getElementsByClassName","length","toggle","content","nextElementSibling","eduForm","titleEdu","school","semester","dateEdu","statusEdu","commentEdu","editEduBtn","deleteEduBtn","addEduBtn","educationMessage","eduListAdmin","getEducationListAdmin","education","educationID","title","changeEducationInfo","clearInputs","date","status","comment","setAttribute","clearAllMessages","editEducation","updatedEducation","deleteEducation","deleteData","confirm","callMethod","prepareToAddEducation","addEducation","updateListAdmin","workListAdmin","firstChild","removeChild","getWorkListAdmin","webbpageList","getWebbpageListAdmin","adminListsText","getTextListAdmin","values","titleWork","workplace","dateWork","commentWork","titleWebbpage","linkWebbpage","descriptionWebbpage","imageWebbpage","webbpageLinkLink","webbpageImage","textTextarea","textTitle","textImage","textImgDiv","setTimeout","workMessage","removeAttribute","textMessage","webbpageMessage","portfolioDiv","workList","courseListTable","oldCourseList","indexEl","aboutText","aboutImg","aboutTitle","cMobile","cMail","cGithub","getWorkFrontPage","work","getWebbpages","webbpages","imgPath","description","link","getTextsForIndex","texts","theText","getTextsEducation","educationEl","getEducationList","edSta","adminTextSubmit","textFrom","textID","changeTexts","src","editTextAdmin","currentTextTitle","newText","theImg","files","updatedTheText","formData","FormData","append","webbpageForm","editWebbpageBtn","deleteWebbpageBtn","addWebbpageBtn","webbpageID","changeWebbpageInfo","webbpage","deleteWebbpage","editWebbpage","updateWebbpage","editWebbTitle","editWebbLink","editWebbDescription","editImageWebbpage","prepareToAddWebbapge","addWebbpage","newWebbTitle","newWebbLink","newWebbDescription","newImageWebbpage","workForm","editWorkBtn","deleteWorkBtn","addWorkBtn","workID","changeWorkInfo","editWork","updatedWork","deleteWork","prepareToAddWork","addWork","callMessage","callWord","method","body"],"mappings":"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","file":"../javascript/main.js","sourcesContent":["\"use strict\";\r\n\r\n\r\n//Element in admin header\r\nlet header_left = document.getElementById('header_left');\r\n\r\n//Get input (values) \r\nlet emailInput = document.getElementById('email'); \r\nlet passwordInput = document.getElementById('password');\r\n\r\n//Other elements needed\r\nlet submitBtn = document.getElementById('submitBtn');\r\nlet loginTest = document.getElementById('login_test');\r\nlet signInMessage = document.getElementById('signInMessage');\r\n\r\n//Form elements (admin)\r\nlet emailPassword = document.getElementById('emailPassword');\r\nlet passwordPassword = document.getElementById('passwordPassword');\r\nlet passwordForm = document.getElementById('passwordForm');\r\n\r\n//Form message\r\nlet passwordMessage = document.getElementById('passwordMessage');\r\n\r\n\r\n\r\n\r\n//Function to sign in admin user\r\nlet signInUser = async (event) => {\r\n\r\n    //Stop form to reload\r\n    event.preventDefault();\r\n\r\n    //Collect Values from inputs\r\n    let password = (<HTMLInputElement>passwordInput).value;\r\n    let email = (<HTMLInputElement>emailInput).value;\r\n\r\n    //Creat api link with input values\r\n    let apiLinkWithValues = apiLinkSignIn + \"?email=\" + email + \r\n                            \"&password=\" + password;\r\n    \r\n    fetch(apiLinkWithValues)\r\n\r\n    .then(response => {\r\n        //If user can sign in\r\n        if(response.ok) {\r\n\r\n            response.json().then(data => {\r\n\r\n                data.forEach(user => {\r\n                    sessionStorage.setItem('name', user.firstname);\r\n                    sessionStorage.setItem('id', user.userID);\r\n                    sessionStorage.setItem('signIn', 'true'); \r\n    \r\n                    location.replace(\"/admin/index.html\");\r\n                \r\n                })\r\n\r\n            });\r\n            \r\n\r\n        //If something is wrong\r\n        } else if (!response.ok) {\r\n\r\n            //Get info\r\n            response.json().then(data => {\r\n\r\n                //Take JSON info make to string\r\n                let string = JSON.stringify(data);\r\n                //Convert string to object\r\n                let parse = JSON.parse(string);\r\n\r\n                //Print out objekt message fom Rest\r\n                signInMessage.innerHTML = parse.message;\r\n                signInMessage.classList.add(\"error\");\r\n\r\n            });\r\n\r\n        } else {\r\n\r\n            //Well, if something unexpectedly happend? \r\n            signInMessage.innerHTML = 'Kontakta administratören';\r\n            signInMessage.classList.add(\"error\");\r\n        }\r\n \r\n      \r\n    });\r\n\r\n};\r\n\r\n\r\n\r\nlet changePassword = (event) => {\r\n\r\n    //Stop form to reload\r\n    event.preventDefault();\r\n\r\n    //collect input values\r\n    let newPassword = (<HTMLInputElement>passwordPassword).value;\r\n    let userEmail = (<HTMLInputElement>emailPassword).value;\r\n\r\n    let updatePassword = {'password': newPassword, 'email': userEmail}; \r\n\r\n    \r\n    let callURL = apiLinkSignIn;\r\n    let callMethod = 'PUT';\r\n    let callData = JSON.stringify(updatePassword);\r\n    let callMessage = passwordMessage;\r\n    let callWord = 'password'; //Not needed \r\n    \r\n    //call fetch function\r\n    callFetch(callURL, callMethod, callData, callMessage, callWord);\r\n\r\n}\r\n\r\n\r\n/*\r\n    If random user get to admin page, check if its sign in or not throu local storge\r\n    If not, send them to sign in page\r\n    Or print out thier name in header\r\n*/\r\n\r\nlet checkAdmin = () => {\r\n    if (sessionStorage.getItem(\"signIn\") != 'true' || sessionStorage.getItem(\"signIn\") == 'false' || sessionStorage.getItem(\"signIn\") === null ) {\r\n\r\n        location.replace(\"login.html\");\r\n\r\n    } \r\n}\r\n\r\n\r\n//Sign out admin user\r\nlet signOut = () => {\r\n    sessionStorage.clear();\r\n    location.replace(\"login.html\");\r\n}\r\n\r\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n//Element in admin header\nlet header_left = document.getElementById('header_left');\n//Get input (values) \nlet emailInput = document.getElementById('email');\nlet passwordInput = document.getElementById('password');\n//Other elements needed\nlet submitBtn = document.getElementById('submitBtn');\nlet loginTest = document.getElementById('login_test');\nlet signInMessage = document.getElementById('signInMessage');\n//Form elements (admin)\nlet emailPassword = document.getElementById('emailPassword');\nlet passwordPassword = document.getElementById('passwordPassword');\nlet passwordForm = document.getElementById('passwordForm');\n//Form message\nlet passwordMessage = document.getElementById('passwordMessage');\n//Function to sign in admin user\nlet signInUser = (event) => __awaiter(void 0, void 0, void 0, function* () {\n    //Stop form to reload\n    event.preventDefault();\n    //Collect Values from inputs\n    let password = passwordInput.value;\n    let email = emailInput.value;\n    //Creat api link with input values\n    let apiLinkWithValues = apiLinkSignIn + \"?email=\" + email +\n        \"&password=\" + password;\n    fetch(apiLinkWithValues)\n        .then(response => {\n        //If user can sign in\n        if (response.ok) {\n            response.json().then(data => {\n                data.forEach(user => {\n                    sessionStorage.setItem('name', user.firstname);\n                    sessionStorage.setItem('id', user.userID);\n                    sessionStorage.setItem('signIn', 'true');\n                    location.replace(\"/admin/index.html\");\n                });\n            });\n            //If something is wrong\n        }\n        else if (!response.ok) {\n            //Get info\n            response.json().then(data => {\n                //Take JSON info make to string\n                let string = JSON.stringify(data);\n                //Convert string to object\n                let parse = JSON.parse(string);\n                //Print out objekt message fom Rest\n                signInMessage.innerHTML = parse.message;\n                signInMessage.classList.add(\"error\");\n            });\n        }\n        else {\n            //Well, if something unexpectedly happend? \n            signInMessage.innerHTML = 'Kontakta administratören';\n            signInMessage.classList.add(\"error\");\n        }\n    });\n});\nlet changePassword = (event) => {\n    //Stop form to reload\n    event.preventDefault();\n    //collect input values\n    let newPassword = passwordPassword.value;\n    let userEmail = emailPassword.value;\n    let updatePassword = { 'password': newPassword, 'email': userEmail };\n    let callURL = apiLinkSignIn;\n    let callMethod = 'PUT';\n    let callData = JSON.stringify(updatePassword);\n    let callMessage = passwordMessage;\n    let callWord = 'password'; //Not needed \n    //call fetch function\n    callFetch(callURL, callMethod, callData, callMessage, callWord);\n};\n/*\n    If random user get to admin page, check if its sign in or not throu local storge\n    If not, send them to sign in page\n    Or print out thier name in header\n*/\nlet checkAdmin = () => {\n    if (sessionStorage.getItem(\"signIn\") != 'true' || sessionStorage.getItem(\"signIn\") == 'false' || sessionStorage.getItem(\"signIn\") === null) {\n        location.replace(\"login.html\");\n    }\n};\n//Sign out admin user\nlet signOut = () => {\n    sessionStorage.clear();\n    location.replace(\"login.html\");\n};\n","//API link for page\r\nlet apiLinkEducation = \"https://emiria.se/admin/API/rest/rest.education.php\";\r\nlet apiLinkEducationWithID = \"https://emiria.se/admin/API/rest/rest.education.php?educationID=\";\r\n\r\n//Texts\r\nlet apiLinkTexts = \"https://emiria.se/admin/API/rest/rest.texts.php\";\r\nlet apiLinkTextsWithID = \"https://emiria.se/admin/API/rest/rest.texts.php?textID=\";\r\n\r\n//Work\r\nlet apiLinkWork = \"https://emiria.se/admin/API/rest/rest.work.php\";\r\nlet apiLinkIDWork = \"https://emiria.se/admin/API/rest/rest.work.php?workID=\";\r\n\r\n//Webbpages/Portfolio\r\nlet apiLinkWebbpages = 'https://emiria.se/admin/API/rest/rest.webbpages.php';\r\nlet apiLinkWebbpagesWithID = 'https://emiria.se/admin/API/rest/rest.webbpages.php?webbpageID=';\r\n\r\n//Sign ins\r\nlet apiLinkSignIn = \"https://emiria.se/admin/API/rest/rest.user.php\";\r\n","\"use strict\";\r\n\r\n\r\n//Get elements from header\r\nlet menuBtn = document.getElementById(\"menuBtn\");\r\nlet menuList = document.getElementById(\"menuList\");\r\n\r\n//Eventlistiner and its function to open and close nav menu\r\nmenuBtn.addEventListener(\"click\", () => {\r\n    if(menuList.style.display === \"none\") {\r\n\r\n        menuList.style.display = \"block\";\r\n        menuList.style.transition = \"0.2s\";\r\n    } else {\r\n        \r\n        menuList.style.display = \"none\";\r\n        menuList.style.transition = \"0.2s\";\r\n    }\r\n});\r\n\r\n\r\n\r\n/*Chech screen size, to decide whether the menu should be displayed or not - made 2020-10-26*/\r\nconst screenSize = window.matchMedia(\"(max-width: 800px), (max-height:550px)\")\r\n\r\n//Load bruger menu\r\nlet loadMenu = () => {\r\n    if (screenSize.matches) {\r\n        menuBtn.style.display = \"block\";\r\n        menuList.style.display = \"none\";\r\n\r\n    } else {\r\n        menuBtn.style.display = \"none\";\r\n        menuList.style.display = \"block\";\r\n    }\r\n}\r\n\r\nloadMenu();                             // Trigger function \r\nscreenSize.addListener(loadMenu);      // Attach listener function on state changes\r\n\r\n\r\nif (sessionStorage.getItem(\"signIn\") == 'true') {\r\n    let liEl = document.createElement(\"LI\");\r\n    liEl.innerHTML = `<a href=\"/admin\">Admin</a>`;\r\n    menuList.prepend(liEl);\r\n} ","\"use strict\";  \r\n\r\n/*\r\n    Code from w3school\r\n    https://www.w3schools.com/howto/howto_js_collapsible.asp\r\n*/\r\n\r\nlet btn = document.getElementsByClassName(\"admin_collapsibleBtn\");\r\nlet iii;\r\n\r\nfor (iii = 0; iii < btn.length; iii++) {\r\n  \r\n  btn[iii].addEventListener(\"click\", function() {\r\n    this.classList.toggle(\"collUp\");\r\n    \r\n    let content = this.nextElementSibling;\r\n\r\n    //Close\r\n    if (content.style.display === \"block\") {\r\n      content.style.display = \"none\";\r\n\r\n    //Open\r\n    } else {\r\n      content.style.display = \"block\";\r\n    }  \r\n  });\r\n  \r\n}","\"use strict\";\r\n\r\n//Get elemnts from work form\r\nlet eduForm = document.getElementById('eduForm');                   //Formuläret\r\nlet titleEdu = document.getElementById('titleEdu');                   //Input\r\nlet school = document.getElementById('school');                     //Input\r\nlet semester = document.getElementById('semester');                 //Input\r\nlet dateEdu = document.getElementById('dateEdu');                   //Input\r\nlet statusEdu = document.getElementById('statusEdu');               //Number\r\nlet commentEdu = document.getElementById('commentEdu');             //Textarea\r\n\r\n//Form buttons\r\nlet editEduBtn = document.getElementById('editEduBtn');             //Edit btn form\r\nlet deleteEduBtn = document.getElementById('deleteEduBtn');         //Delete btn from\r\nlet addEduBtn = document.getElementById('addEduBtn');               //Add btn form\r\n\r\n//Other elements\r\nlet educationMessage = document.getElementById('educationMessage'); //Message to display whats going on\r\nlet eduListAdmin = document.getElementById(\"eduListAdmin\");         //Div to put li element in\r\n\r\n\r\nif (editEduBtn != null) {\r\n    editEduBtn.style.display='none';\r\n    deleteEduBtn.style.display='none';\r\n    addEduBtn.style.display='none';\r\n    eduForm.style.display='none';\r\n}\r\n\r\n\r\nlet getEducationListAdmin = () => {\r\n\r\n    fetch(apiLinkEducation)\r\n    .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data.forEach(education => {\r\n\r\n                eduListAdmin.innerHTML += `\r\n                    <li onclick=\"changeEducationInfo('${education.educationID}')\"> ${education.title} </li>\r\n                `;\r\n            \r\n            })\r\n\r\n        })\r\n}\r\n\r\n\r\nlet changeEducationInfo = (educationID) => {\r\n\r\n    fetch(apiLinkEducationWithID+educationID)\r\n    .then(response => response.json())\r\n        .then(data => {\r\n            data.forEach(education => {\r\n\r\n                clearInputs('education');\r\n\r\n                    (<HTMLInputElement>titleEdu).value = education.title;\r\n                    (<HTMLInputElement>school).value  = education.school;\r\n                    (<HTMLInputElement>semester).value  = education.semester;\r\n                    (<HTMLInputElement>dateEdu).value  = education.date;\r\n                    (<HTMLInputElement>statusEdu).value = education.status;\r\n                    (<HTMLInputElement>commentEdu).value = education.comment;\r\n\r\n                    editEduBtn.setAttribute(\"onclick\",\"editEducation(\" + educationID + \");\");\r\n                    deleteEduBtn.setAttribute(\"onclick\",\"deleteEducation(\" + educationID + \");\");\r\n\r\n                    editEduBtn.style.display='block';\r\n                    deleteEduBtn.style.display='block';\r\n                    eduForm.style.display='block';\r\n                    addEduBtn.style.display='none';\r\n\r\n                    clearAllMessages('education');\r\n\r\n\r\n            })\r\n        })\r\n}\r\n\r\n\r\n\r\nlet editEducation = (educationID) => {\r\n\r\n    //Stoppar formulär för att ladda om\r\n    event.preventDefault();\r\n\r\n    //collect input data\r\n    let newTitleEdu = (<HTMLInputElement>titleEdu).value;\r\n    let newSchool = (<HTMLInputElement>school).value ;\r\n    let newSemester = (<HTMLInputElement>semester).value ;\r\n    let newDateEdu = (<HTMLInputElement>dateEdu).value ;\r\n    let newSatusEdu = (<HTMLInputElement>statusEdu).value;\r\n    let newCommentEdu = (<HTMLInputElement>commentEdu).value;\r\n\r\n    let updatedEducation = {'educationID': educationID, 'title': newTitleEdu, 'school': newSchool, 'semester': newSemester, 'date': newDateEdu, 'status': newSatusEdu, 'comment': newCommentEdu}; \r\n\r\n    //Data to send to fetch call function\r\n    let callURL = apiLinkEducationWithID+educationID;\r\n    let callMethod = 'PUT';\r\n    let callData = JSON.stringify(updatedEducation);\r\n    let callMessage = educationMessage;\r\n    let callWord = 'education';\r\n    \r\n    //call fetch function\r\n    callFetch(callURL, callMethod, callData, callMessage, callWord);\r\n\r\n}\r\n\r\n\r\nlet deleteEducation = (educationID) => {\r\n    //Stoppar formulär för att ladda om\r\n    event.preventDefault();\r\n\r\n    let title = (<HTMLInputElement>titleEdu).value;\r\n    let deleteData = {'title': title, 'educationID': educationID};\r\n\r\n    //To prevent mistake, do alert before\r\n    let alertReslut = confirm(\"Är du säker på att du vill radera kursen?\");\r\n\r\n    if (alertReslut == true) {\r\n    \r\n        //Data to send to fetch call function\r\n        let callURL = apiLinkEducationWithID+educationID;\r\n        let callMethod = 'DELETE';\r\n        let callData = JSON.stringify(deleteData);\r\n        let callMessage = educationMessage;\r\n        let callWord = 'education';\r\n        \r\n        //call fetch function\r\n        callFetch(callURL, callMethod, callData, callMessage, callWord);\r\n    \r\n    } \r\n}\r\n\r\nlet prepareToAddEducation = () => {\r\n    editEduBtn.style.display='none';\r\n    deleteEduBtn.style.display='none';\r\n    addEduBtn.style.display='block';\r\n    eduForm.style.display='block';\r\n\r\n    clearInputs('education');\r\n    addEduBtn.setAttribute(\"onclick\",\"addEducation();\")\r\n    clearAllMessages('education');\r\n}\r\n\r\n\r\nlet addEducation = () => {\r\n    //Stop form to reload page\r\n    event.preventDefault();\r\n    \r\n    //Read the values from input\r\n    let addTitleEdu = (<HTMLInputElement>titleEdu).value;\r\n    let addSchool = (<HTMLInputElement>school).value ;\r\n    let addSemester = (<HTMLInputElement>semester).value ;\r\n    let addDateEdu = (<HTMLInputElement>dateEdu).value ;\r\n    let addSatusEdu = (<HTMLInputElement>statusEdu).value;\r\n    let addCommentEdu = (<HTMLInputElement>commentEdu).value;\r\n\r\n    let addEducation = {'title': addTitleEdu, 'school': addSchool, 'semester': addSemester, 'date': addDateEdu, 'status': addSatusEdu, 'comment': addCommentEdu}; \r\n\r\n    //Data to send to fetch call function\r\n    let callURL = apiLinkEducation;\r\n    let callMethod = 'POST';\r\n    let callData = JSON.stringify(addEducation);\r\n    let callMessage = educationMessage;\r\n    let callWord = 'education';\r\n\r\n    //call fetch function\r\n    callFetch(callURL, callMethod, callData, callMessage, callWord);\r\n}\r\n\r\n\r\n","\"use strict\";\r\n\r\nlet updateListAdmin = value => {\r\n\r\n    if(value == 'work') {\r\n        //Remove all elment in a div\r\n        while (workListAdmin.firstChild) {\r\n            workListAdmin.removeChild(workListAdmin.firstChild);\r\n        }\r\n\r\n        //Get all ul-list again\r\n        getWorkListAdmin();\r\n        clearInputs(value);\r\n\r\n    } else if (value == 'education') {\r\n\r\n        //Remove all elment in a div\r\n        while (eduListAdmin.firstChild) {\r\n            eduListAdmin.removeChild(eduListAdmin.firstChild);\r\n        }\r\n        //Get all ul-list again\r\n        getEducationListAdmin();\r\n        clearInputs(value);\r\n\r\n\r\n    } else if (value == 'webbpage') {\r\n        //Remove all elment in a div\r\n        while (webbpageList.firstChild) {\r\n            webbpageList.removeChild(webbpageList.firstChild);\r\n        }\r\n        //Get all ul-list again\r\n        getWebbpageListAdmin();\r\n        clearInputs(value);\r\n\r\n    } else if (value == 'text') {\r\n        //Remove all elment in a div\r\n        while (adminListsText.firstChild) {\r\n            adminListsText.removeChild(adminListsText.firstChild);\r\n        }\r\n        \r\n        //Get all ul-list again\r\n        getTextListAdmin();\r\n        clearInputs(value);\r\n    } \r\n\r\n}\r\n\r\n\r\nlet clearInputs = (values: string) => {\r\n    \r\n    if (values == 'work') {\r\n        (<HTMLInputElement>titleWork).value = \"\";\r\n        (<HTMLInputElement>workplace).value  = \"\";\r\n        (<HTMLInputElement>dateWork).value  = \"\";\r\n        (<HTMLInputElement>commentWork).value = \"\";\r\n\r\n    } else if (values == 'education') {\r\n        (<HTMLInputElement>titleEdu).value = \"\";\r\n        (<HTMLInputElement>school).value  = \"\";\r\n        (<HTMLInputElement>semester).value  = \"\";\r\n        (<HTMLInputElement>dateEdu).value  = \"\";\r\n        (<HTMLInputElement>statusEdu).value = \"\";\r\n        (<HTMLInputElement>commentEdu).value = \"\";\r\n\r\n    } else if (values == 'webbpage') {\r\n        (<HTMLInputElement>titleWebbpage).value = \"\";\r\n        (<HTMLInputElement>linkWebbpage).value  = \"\";\r\n        (<HTMLInputElement>descriptionWebbpage).value  = \"\";\r\n        (<HTMLInputElement>imageWebbpage).value  = \"\";\r\n        webbpageLinkLink.setAttribute('href', \"\");\r\n        webbpageLinkLink.innerHTML = \"\";\r\n        webbpageImage.innerHTML = \"\";\r\n\r\n    } else if (values == 'text') {\r\n        (<HTMLInputElement>textTextarea).value = \"\";\r\n        (<HTMLInputElement>textTitle).value = \"\";\r\n        (<HTMLInputElement>textImage).value = \"\";\r\n        textImgDiv.innerHTML = \"\";\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nlet clearAllMessages = (values: string) => {\r\n\r\n    setTimeout(() => {\r\n\r\n        if(values == 'work') {\r\n            workMessage.innerHTML = \"\";\r\n            workMessage.removeAttribute('class');\r\n\r\n        } else if (values == 'education') {\r\n            educationMessage.innerHTML = \"\";\r\n            educationMessage.removeAttribute('class');\r\n\r\n        } else if (values == 'text') {\r\n            textMessage.innerHTML = \"\";\r\n            textMessage.removeAttribute('class');\r\n            \r\n        } else if (values == 'webbpage') {\r\n            webbpageMessage.innerHTML = \"\";\r\n            webbpageMessage.removeAttribute('class');\r\n            \r\n        } else if (values == 'signIn') {\r\n            signInMessage.innerHTML = \"\";\r\n            signInMessage.removeAttribute('class');\r\n\r\n        } else if (values == 'password') {\r\n            passwordMessage.innerHTML = \"\";\r\n            passwordMessage.removeAttribute('class');\r\n        } \r\n\r\n    }, 6000);\r\n}","\r\n//Elements from public webbpage\r\nlet portfolioDiv = document.getElementById('portfolioDiv');\r\nlet workList = document.getElementById(\"workList\");                     //Uses on work-page (not admin-related)\r\n\r\n//Table element from front page\r\nlet courseListTable = document.getElementById(\"courseListTable\");       //Uses on education-page (not admin-related)\r\nlet oldCourseList = document.getElementById(\"courseOldListTable\");\r\n\r\n\r\n//Get elements for index page\r\nlet indexEl = document.getElementById(\"indexText\");\r\nlet aboutText = document.getElementById(\"aboutText\");\r\nlet aboutImg = document.getElementById(\"aboutImg\");\r\nlet aboutTitle = document.getElementById(\"aboutTitle\");\r\nlet cMobile = document.getElementById(\"contact_mobile\");\r\nlet cMail = document.getElementById('contact_mail');\r\nlet cGithub = document.getElementById('contact_github');\r\n\r\nlet getWorkFrontPage = () => {\r\n    fetch(apiLinkWork)\r\n    .then(response => response.json())\r\n        .then(data => {\r\n            data.forEach(work => {\r\n\r\n              if (workList != null) {\r\n                    workList.innerHTML += `\r\n                        <section class=\"work_sectionDesign\">\r\n                            <div> \r\n                                <h2>${work.title}</h2>\r\n                                <p> ${work.comment} </p>\r\n                                <p class=\"work_dateTime\"> ${work.workplace} <br> ${work.date}</p>\r\n                            </div>\r\n                        </section>\r\n                    `;\r\n              }\r\n                \r\n            })\r\n        })\r\n}\r\n\r\n\r\n//Print out on main page \r\nlet getWebbpages = () => {\r\n    fetch(apiLinkWebbpages)\r\n    .then(response => response.json())\r\n        .then(data => {\r\n            data.forEach(webbpages => {\r\n\r\n                if(webbpages.imgPath == null || webbpages.imgPath == 'empty') {\r\n                    \r\n                    portfolioDiv.innerHTML += `\r\n                        <h2>${webbpages.title}</h2>\r\n                        <div class=\"portfolioFlex\"> \r\n                            <div>\r\n                                <p> ${webbpages.description} </p>\r\n                                <p> Kika på webbplatsen här: <a href=\"${webbpages.link}\" target=\"_blank\"> webblänk till ${webbpages.title} </a> </p>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <img src=\"../images/missing.png\" style=\"border: 2px solid #ddd;\" alt=\"\">\r\n                            </div>\r\n                        </div>\r\n\r\n                    `;\r\n\r\n                } else {\r\n                    portfolioDiv.innerHTML += `\r\n                    <h2>${webbpages.title}</h2>\r\n                    <div class=\"portfolioFlex\"> \r\n                        <div>\r\n                            <p> ${webbpages.description} </p>\r\n                            <p> Kika på webbplatsen här: <a href=\"${webbpages.link}\" target=\"_blank\"> webblänk till ${webbpages.title} </a> </p>\r\n                        </div>\r\n\r\n                        <div>\r\n                            \r\n                            <a href=\"${webbpages.link}\" target=\"_blank\" title=\"Till webbplatsen ${webbpages.title}\" ><img src=\"${webbpages.imgPath}\" alt=\"\"></a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    `;\r\n                }\r\n                \r\n            })\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\nlet getTextsForIndex = () => {\r\n    fetch(apiLinkTexts)\r\n    .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data.forEach(texts => {\r\n\r\n                if(texts.title == 'Index' && indexEl != null) {\r\n                    indexEl.innerHTML = texts.theText;\r\n                }\r\n\r\n                if(texts.title == 'About' && aboutText != null) {\r\n                    aboutText.innerHTML = texts.theText;\r\n                    aboutImg.innerHTML = `<img src=\"${texts.imgPath}\" alt=\"\"/> `\r\n                }\r\n\r\n                if(texts.title == 'Mobile' && cMobile != null) {\r\n                    cMobile.innerHTML = `<a href=\"tel:${texts.theText}\">${texts.theText}</a>`;\r\n                }\r\n\r\n                if(texts.title == 'Mail' && cMail != null) {\r\n                    cMail.innerHTML = `<a href=\"mailto:${texts.theText}\">${texts.theText}</a>`;\r\n                }\r\n\r\n                if(texts.title == 'Github' && cGithub != null) {\r\n                    cGithub.innerHTML = `<a href=\"https://github.com/${texts.theText}\">${texts.theText}</a>`;\r\n\r\n                }\r\n            })\r\n        })\r\n\r\n}\r\n\r\n\r\n\r\n//Education page\r\nlet getTextsEducation = () => {\r\n    fetch(apiLinkTextsWithID+3)\r\n    .then(response => response.json())\r\n        .then(data => {\r\n            data.forEach(texts => {\r\n\r\n            if(educationEl != null) {\r\n                educationEl.innerHTML += `\r\n                    <p> ${texts.theText} </p>\r\n                `;\r\n            }\r\n                \r\n            })\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n//Uses on front page\r\nlet getEducationList = () => {\r\n    fetch(apiLinkEducation)\r\n    .then(response => response.json())\r\n        .then(data => {\r\n\r\n            data.forEach(education => {\r\n\r\n                if(courseListTable != null && education.school == 'Mittuniversitetet' && education.status == 0) {\r\n                    let edSta = \"Pågående\" ;\r\n\r\n                    courseListTable.innerHTML += ` \r\n                    <tr> \r\n                        <td> ${education.title} </td>\r\n                        <td> ${education.comment} </td>\r\n                        <td> ${education.semester} ${education.date} </td>\r\n                        <td> ${edSta} </td>\r\n                    </tr>\r\n                    `;\r\n                } else if(courseListTable != null && education.school == 'Mittuniversitetet' && education.status == 1){\r\n                    let edSta = \"Avslutad\" ;\r\n                        courseListTable.innerHTML += ` \r\n                        <tr> \r\n                            <td> ${education.title} </td>\r\n                            <td> ${education.comment} </td>\r\n                            <td> ${education.semester} ${education.date} </td>\r\n                            <td> ${edSta} </td>\r\n                        </tr>\r\n                        `;\r\n                } \r\n            \r\n\r\n                if(oldCourseList != null && education.school != 'Mittuniversitetet') {\r\n                    oldCourseList.innerHTML += ` \r\n                    <tr> \r\n                        <td> ${education.title} </td>\r\n                        <td> ${education.comment} </td>\r\n                        <td> ${education.semester} ${education.date} </td>\r\n                    </tr>\r\n                    `;\r\n                }\r\n\r\n            })\r\n        })\r\n}\r\n\r\n\r\n","\"use strict\";\r\n\r\n//Elements for education page\r\nlet educationEl = document.getElementById(\"educationText\");\r\n\r\n//Element for admin\r\nlet textMessage = document.getElementById(\"textMessage\");\r\nlet adminTextSubmit = document.getElementById('adminTextSubmit');\r\n\r\nlet adminListsText = document.getElementById(\"adminListsText\");\r\n\r\n//Form (admin)\r\nlet textTextarea = document.getElementById(\"textTextarea\");\r\nlet textFrom = document.getElementById(\"textFrom\");\r\nlet textImage = document.getElementById(\"textImage\");\r\nlet textTitle = document.getElementById('textTitle');\r\n\r\n\r\n//Div för förhandsvissning bild\r\nlet textImgDiv = document.getElementById('textFrom_imgDiv');\r\n\r\n\r\nlet getTextListAdmin = () => {\r\n\r\n    textFrom.style.display = \"none\";\r\n\r\n    fetch(apiLinkTexts)\r\n    .then(response => response.json())\r\n        .then(data => {\r\n\r\n        data.forEach(texts => {\r\n\r\n            adminListsText.innerHTML += `\r\n                <li onclick=\"changeTexts('${texts.textID}')\"> \r\n                    ${texts.title} \r\n                </li>\r\n            `;\r\n\r\n        })\r\n\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nlet changeTexts = (textID) => {\r\n\r\n    textFrom.style.display = \"block\";\r\n\r\n    fetch(apiLinkTextsWithID+textID)\r\n    .then(response => response.json())\r\n        .then(data => {\r\n            data.forEach(data => {\r\n\r\n                if(textTextarea != null) {\r\n                    (<HTMLInputElement>textTitle).value = data.title;\r\n\r\n                    textTextarea.innerHTML = data.theText;\r\n\r\n\r\n                    if(data.imgPath != 'empty') {\r\n                        let img = document.createElement(\"img\");\r\n                        img.src = data.imgPath;\r\n                        \r\n                        textImgDiv.innerHTML = ` \r\n                            <p> Nuvarande bild: </p>\r\n                            <img src=\"${data.imgPath}\" alt=\"\"/>\r\n                        `;\r\n\r\n                    } else {\r\n\r\n                        textImgDiv.innerHTML = \"\";\r\n                    }\r\n\r\n                    \r\n                    adminTextSubmit.setAttribute(\"onclick\",\"editTextAdmin('\" + textID + \"');\");\r\n                }\r\n                \r\n            })\r\n        })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nlet editTextAdmin = (textID) => {\r\n\r\n    //Stop form to reload page\r\n    event.preventDefault();\r\n\r\n    //Collect data\r\n    let currentTextTitle = (<HTMLInputElement>textTitle).value;\r\n    let newText = (<HTMLInputElement>textTextarea).value;\r\n    let theImg = (<HTMLInputElement>textImage).files[0];\r\n\r\n    //For PUT request\r\n    let updatedTheText = {'title': currentTextTitle, 'theText': newText}; \r\n\r\n    //If image exist, lets do a PUT request, other way make POST\r\n    if((<HTMLInputElement>textImage).files[0] == null) { \r\n        \r\n \r\n        //Data to send to fetch call function\r\n        let callURL = apiLinkTextsWithID+textID;\r\n        let callMethod = 'PUT';\r\n        let callData = JSON.stringify(updatedTheText);\r\n        let callMessage = textMessage;\r\n        let callWord = 'text';\r\n\r\n        //call fetch function\r\n        callFetch(callURL, callMethod, callData, callMessage, callWord);\r\n\r\n    } else {\r\n\r\n        //For POST request\r\n        let formData = new FormData();\r\n\r\n        formData.append('image', theImg);\r\n        formData.append('theText', newText);\r\n        formData.append('textID', textID);\r\n        formData.append('title', currentTextTitle)\r\n\r\n        //Data to send to fetch call function\r\n        let callURL = apiLinkTexts;\r\n        let callMethod = 'POST';\r\n        let callData = formData;\r\n        let callMessage = textMessage;\r\n        let callWord = 'text';\r\n        \r\n        //call fetch function\r\n        callFetch(callURL, callMethod, callData, callMessage, callWord);\r\n\r\n    }\r\n\r\n    \r\n    \r\n}","\"use strict\";\r\n\r\n//Elements\r\nlet webbpageList = document.getElementById('webbpageList'); //Ul-list\r\nlet webbpageMessage = document.getElementById('webbpageMessage');\r\n\r\n//Form elements\r\nlet webbpageForm = document.getElementById('webbpageForm');\r\nlet titleWebbpage = document.getElementById('titleWebbpage');\r\nlet linkWebbpage = document.getElementById('linkWebbpage');\r\nlet descriptionWebbpage = document.getElementById('descriptionWebbpage');\r\nlet imageWebbpage = document.getElementById('imageWebbpage');\r\nlet webbpageLinkLink = document.getElementById('webbpageLinkLink');             //A-element to display a clickable link\r\nlet webbpageImage = document.getElementById('webbpageFrom_imgDiv');\r\n\r\nlet editWebbpageBtn = document.getElementById('editWebbpageBtn');               //Edit btn form\r\nlet deleteWebbpageBtn = document.getElementById('deleteWebbpageBtn');           //Delete btn from\r\nlet addWebbpageBtn = document.getElementById('addWebbpageBtn');                 //Add btn form\r\n\r\n\r\n\r\nif (editWebbpageBtn != null) {\r\n    //Hide all btns in the beginning\r\n    editWebbpageBtn.style.display='none';\r\n    deleteWebbpageBtn.style.display='none';\r\n    addWebbpageBtn.style.display='none';\r\n    webbpageForm.style.display='none';\r\n}\r\n\r\n\r\nlet getWebbpageListAdmin = () => {\r\n\r\n    fetch(apiLinkWebbpages)\r\n    .then( response => {\r\n\r\n        //If user can sign in\r\n        if(response.ok) {\r\n\r\n            response.json().then(data => {\r\n\r\n                data.forEach(webbpages => {\r\n\r\n                    webbpageList.innerHTML += `\r\n                        <li onclick=\"changeWebbpageInfo('${webbpages.webbpageID}')\"> ${webbpages.title} </li>\r\n                    `;\r\n                      \r\n                  })\r\n\r\n            });\r\n\r\n\r\n        //If something is wrong\r\n        } else if (!response.ok) {\r\n\r\n            //Get info\r\n            response.json().then(data => {\r\n\r\n                //Take JSON info make to string\r\n                let string = JSON.stringify(data);\r\n                //Convert string to object\r\n                let parse = JSON.parse(string);\r\n\r\n                //Print out objekt message fom Rest\r\n                webbpageMessage.innerHTML = parse.message;\r\n                webbpageMessage.classList.add(\"error\");\r\n\r\n            });\r\n\r\n        } else {\r\n\r\n            webbpageMessage.innerHTML = 'Något gått snett, kolla koden';\r\n            webbpageMessage.classList.add(\"message\");\r\n        }\r\n\r\n        \r\n    });\r\n\r\n}\r\n\r\n\r\n\r\nlet changeWebbpageInfo = (webbpageID) => {\r\n\r\n    fetch(apiLinkWebbpagesWithID+webbpageID)\r\n    .then(response => response.json())\r\n        .then(data => {\r\n            data.forEach(webbpage => {\r\n\r\n                    clearInputs('webbpage');\r\n\r\n                    (<HTMLInputElement>titleWebbpage).value = webbpage.title;\r\n                    (<HTMLInputElement>linkWebbpage).value  = webbpage.link;\r\n                    webbpageLinkLink.setAttribute('href', webbpage.link);\r\n                    webbpageLinkLink.innerHTML = webbpage.link;\r\n                    (<HTMLInputElement>descriptionWebbpage).value  = webbpage.description;\r\n\r\n                    if(webbpage.imgPath == \"\" || webbpage.imgPath == null || webbpage.imgPath == 'empty') {\r\n                        \r\n                        \r\n                        webbpageImage.innerHTML = ` \r\n                            <img src=\"../images/missing.png\" style=\"border: 2px solid #333;\" alt=\"\"> \r\n                        `;\r\n\r\n                    } else {\r\n                        \r\n                        webbpageImage.innerHTML = `\r\n                            <p> Nuvarande bild: </p>\r\n                            <img src=\"${webbpage.imgPath}\" alt=\"\"/>\r\n                        `;\r\n\r\n\r\n                    }\r\n\r\n                    editWebbpageBtn.setAttribute(\"onclick\",\"editWebbpage(\" + webbpageID + \");\");\r\n                    deleteWebbpageBtn.setAttribute(\"onclick\",\"deleteWebbpage(\" + webbpageID + \");\");\r\n\r\n                    editWebbpageBtn.style.display='block';\r\n                    deleteWebbpageBtn.style.display='block';\r\n                    webbpageForm.style.display='block';\r\n                    addWebbpageBtn.style.display='none';\r\n\r\n                    clearAllMessages('webbpage');\r\n\r\n            })\r\n        })\r\n}\r\n\r\n\r\n\r\nlet deleteWebbpage = (webbpageID) => {\r\n    //Stoppar formulär för att ladda om\r\n    event.preventDefault();\r\n\r\n    let title = (<HTMLInputElement>titleWebbpage).value;\r\n    let deleteData = {'title': title, 'webbpageID': webbpageID};\r\n\r\n    //To prevent mistake, do alert before\r\n    let alertReslut = confirm(\"Är du säker på att du vill radera webbsidan?\");\r\n\r\n    if (alertReslut == true) {\r\n    \r\n        //Data to send to fetch call function\r\n        let callURL = apiLinkWebbpagesWithID+webbpageID;\r\n        let callMethod = 'DELETE';\r\n        let callData = JSON.stringify(deleteData);\r\n        let callMessage = webbpageMessage;\r\n        let callWord = 'webbpage';\r\n        \r\n        //call fetch function\r\n        callFetch(callURL, callMethod, callData, callMessage, callWord);\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nlet editWebbpage = (webbpageID) => {\r\n\r\n\r\n       //Stoppar formulär för att ladda om\r\n       event.preventDefault();\r\n\r\n        //If image not exist, lets do a PUT request, other way make POST\r\n        if((<HTMLInputElement>imageWebbpage).files[0] == null) {\r\n\r\n            //collect input data\r\n            let editWebbTitle = (<HTMLInputElement>titleWebbpage).value;\r\n            let editWebbLink = (<HTMLInputElement>linkWebbpage).value;\r\n            let editWebbDescription = (<HTMLInputElement>descriptionWebbpage).value;\r\n        \r\n            let updateWebbpage = {'webbpageID': webbpageID, 'title': editWebbTitle, 'link': editWebbLink, 'description': editWebbDescription}; \r\n        \r\n            //Data to send to fetch call function\r\n            let callURL = apiLinkWebbpagesWithID+webbpageID;\r\n            let callMethod = 'PUT';\r\n            let callData = JSON.stringify(updateWebbpage);\r\n            let callMessage = webbpageMessage;\r\n            let callWord = 'webbpage';\r\n            \r\n            //call fetch function\r\n            callFetch(callURL, callMethod, callData, callMessage, callWord);\r\n\r\n        } else {\r\n\r\n            //collect input data\r\n            let editWebbTitle = (<HTMLInputElement>titleWebbpage).value;\r\n            let editWebbLink = (<HTMLInputElement>linkWebbpage).value;\r\n            let editWebbDescription = (<HTMLInputElement>descriptionWebbpage).value;\r\n            let editImageWebbpage = (<HTMLInputElement>imageWebbpage).files[0];\r\n\r\n            //Creat formdata and put in infromation in it\r\n            let formData = new FormData();\r\n            formData.append('webbpageID', webbpageID);\r\n            formData.append('title', editWebbTitle);\r\n            formData.append('link', editWebbLink);\r\n            formData.append('description', editWebbDescription);\r\n            formData.append('image', editImageWebbpage);\r\n            formData.append('mission', 'edit');\r\n    \r\n            //Data to send to fetch call function\r\n            let callURL = apiLinkWebbpagesWithID+webbpageID;\r\n            let callMethod = 'POST';\r\n            let callData = formData;\r\n            let callMessage = webbpageMessage;\r\n            let callWord = 'webbpage';\r\n            \r\n            //call fetch function\r\n            callFetch(callURL, callMethod, callData, callMessage, callWord);\r\n\r\n        }\r\n\r\n    \r\n \r\n   \r\n}\r\n\r\n\r\n\r\n\r\nlet prepareToAddWebbapge = () => {\r\n\r\n    editWebbpageBtn.style.display='none';\r\n    deleteWebbpageBtn.style.display='none';\r\n    addWebbpageBtn.style.display='block';\r\n    webbpageForm.style.display='block';\r\n\r\n    clearInputs('webbpage');\r\n\r\n    addWebbpageBtn.setAttribute(\"onclick\",\"addWebbpage();\")\r\n\r\n    clearAllMessages('webbpage');\r\n}\r\n\r\n\r\n\r\n\r\nlet addWebbpage = () => {\r\n\r\n   //Stop form to reload page\r\n   event.preventDefault();\r\n    \r\n    //collect input data\r\n    let newWebbTitle = (<HTMLInputElement>titleWebbpage).value;\r\n    let newWebbLink = (<HTMLInputElement>linkWebbpage).value;\r\n    let newWebbDescription = (<HTMLInputElement>descriptionWebbpage).value;\r\n    let newImageWebbpage = (<HTMLInputElement>imageWebbpage).files[0];\r\n\r\n    //Creat formdata and put in infromation in it\r\n    let formData = new FormData();\r\n    formData.append('image', newImageWebbpage);\r\n    formData.append('title', newWebbTitle);\r\n    formData.append('link', newWebbLink);\r\n    formData.append('description', newWebbDescription);\r\n    formData.append('mission', 'add');\r\n\r\n\r\n    //Data to send to fetch call function\r\n    let callURL = apiLinkWebbpages;\r\n    let callMethod = 'POST';\r\n    let callData = formData;\r\n    let callMessage = webbpageMessage;\r\n    let callWord = 'webbpage';\r\n    \r\n    //call fetch function\r\n    callFetch(callURL, callMethod, callData, callMessage, callWord);\r\n\r\n}\r\n\r\n","\"use strict\";\r\n\r\n//Get elemnts from form update work form\r\nlet workForm = document.getElementById('workForm');                     //Formuläret\r\nlet titleWork = document.getElementById('titleWork');                   //Input\r\nlet workplace = document.getElementById('workplace');                   //Input\r\nlet dateWork = document.getElementById('dateWork');                     //Input\r\nlet commentWork = document.getElementById('commentWork');               //Textarea\r\n\r\nlet editWorkBtn = document.getElementById('editWorkBtn');               //Edit btn form\r\nlet deleteWorkBtn = document.getElementById('deleteWorkBtn');           //Delete btn from\r\nlet addWorkBtn = document.getElementById('addWorkBtn');                 //Add btn form\r\n\r\nlet workMessage = document.getElementById('workMessage');               //Message to display whats going on\r\nlet workListAdmin = document.getElementById(\"workListAdmin\");           //Div to put button element in\r\n\r\n\r\nif (editWorkBtn != null) {\r\n    //Hide all form btns and form in the beginning\r\n    editWorkBtn.style.display='none';\r\n    deleteWorkBtn.style.display='none';\r\n    addWorkBtn.style.display='none';\r\n    workForm.style.display='none';\r\n}\r\n\r\n\r\n//Print out a button for every work\r\nlet getWorkListAdmin = () => {\r\n    \r\n    fetch(apiLinkWork)\r\n    .then(response => response.json())\r\n        .then(data => {\r\n            data.forEach(work => {\r\n\r\n              if (workListAdmin != null) {\r\n                    workListAdmin.innerHTML += `\r\n                    <li onclick=\"changeWorkInfo('${work.workID}')\"> ${work.title} </li>\r\n                    `;\r\n              }\r\n                \r\n            })\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n//When button click, show info in input\r\nlet changeWorkInfo = (workID) => {\r\n\r\n    fetch(apiLinkIDWork+workID)\r\n    .then(response => response.json())\r\n        .then(data => {\r\n            data.forEach(work => {\r\n\r\n                    clearInputs('work');\r\n\r\n                    (<HTMLInputElement>titleWork).value = work.title;\r\n                    (<HTMLInputElement>workplace).value  = work.workplace;\r\n                    (<HTMLInputElement>dateWork).value  = work.date;\r\n                    (<HTMLInputElement>commentWork).value = work.comment;\r\n\r\n                    editWorkBtn.setAttribute(\"onclick\",\"editWork(\" + workID + \");\");\r\n                    deleteWorkBtn.setAttribute(\"onclick\",\"deleteWork(\" + workID + \");\");\r\n\r\n                    editWorkBtn.style.display='block';\r\n                    deleteWorkBtn.style.display='block';\r\n                    workForm.style.display='block';\r\n                    addWorkBtn.style.display='none';\r\n\r\n                    clearAllMessages('work');\r\n            })\r\n        })\r\n}\r\n\r\n\r\nlet editWork = (workID) => {\r\n\r\n    //Stoppar formulär för att ladda om\r\n    event.preventDefault();\r\n\r\n    //collect input data\r\n    let newTitle = (<HTMLInputElement>titleWork).value;\r\n    let newWorkplace = (<HTMLInputElement>workplace).value;\r\n    let newDateWork = (<HTMLInputElement>dateWork).value;\r\n    let newComment =  (<HTMLInputElement>commentWork).value;\r\n\r\n    let updatedWork = {'workID': workID, 'title': newTitle, 'workplace': newWorkplace, 'date': newDateWork, 'comment': newComment}; \r\n\r\n    let callURL = apiLinkIDWork+workID;\r\n    let callMethod = 'PUT';\r\n    let callData = JSON.stringify(updatedWork);\r\n    let callMessage = workMessage;\r\n    let callWord = 'work';\r\n    \r\n    //call fetch function\r\n    callFetch(callURL, callMethod, callData, callMessage, callWord);\r\n\r\n}\r\n\r\n\r\nlet deleteWork = (workID) => {\r\n       //Stoppar formulär för att ladda om\r\n       event.preventDefault();\r\n    \r\n    //Collect value\r\n    let workTitle = (<HTMLInputElement>titleWork).value;\r\n\r\n    let deleteData = {'title': workTitle, 'workID': workID};\r\n\r\n    //To prevent mistake, do alert before\r\n    let alertReslut = confirm(\"Är du säker på att du vill radera erfarenheten?!\");\r\n\r\n    if (alertReslut == true) {\r\n    \r\n        let callURL = apiLinkIDWork+workID;\r\n        let callMethod = 'DELETE';\r\n        let callData = JSON.stringify(deleteData);\r\n        let callMessage = workMessage;\r\n        let callWord = 'work';\r\n    \r\n        //call fetch function\r\n        callFetch(callURL, callMethod, callData, callMessage, callWord);\r\n        \r\n    } \r\n}\r\n\r\n\r\n\r\nlet prepareToAddWork = () => {\r\n    editWorkBtn.style.display='none';\r\n    deleteWorkBtn.style.display='none';\r\n    addWorkBtn.style.display='block';\r\n    workForm.style.display='block';\r\n\r\n    clearInputs('work');\r\n\r\n    addWorkBtn.setAttribute(\"onclick\",\"addWork();\")\r\n    clearAllMessages('work')\r\n}\r\n\r\n\r\nlet addWork = () =>{\r\n\r\n    //Stop form to reload page\r\n    event.preventDefault();\r\n    \r\n    //Read the values from input\r\n    let addTitle: string        = (<HTMLInputElement>titleWork).value;\r\n    let addWorkplace: string    = (<HTMLInputElement>workplace).value;\r\n    let addDateWork: any        = (<HTMLInputElement>dateWork).value;\r\n    let addCommentWork: string  =  (<HTMLInputElement>commentWork).value;\r\n\r\n    let addWork = {'title': addTitle, 'workplace': addWorkplace, 'date': addDateWork, 'comment': addCommentWork}; \r\n\r\n    //Data to send to fetch call function\r\n    let callURL = apiLinkWork;\r\n    let callMethod = 'POST';\r\n    let callData = JSON.stringify(addWork);\r\n    let callMessage = workMessage;\r\n    let callWord = 'work';\r\n    \r\n    //call fetch function\r\n    callFetch(callURL, callMethod, callData, callMessage, callWord);\r\n}","\r\n\r\n//Use to post, put and delete\r\nlet callFetch = (callURL, callMethod, callData, callMessage, callWord) => {\r\n\r\n    //Connect to database\r\n    fetch(callURL, {\r\n        method: callMethod, \r\n        body: callData,\r\n    })\r\n    .then(response => {\r\n\r\n        response.json().then(data => {\r\n\r\n            //Take JSON info make to string\r\n            let string = JSON.stringify(data);\r\n            //Convert string to object\r\n            let parse = JSON.parse(string);\r\n\r\n            //Print out objekt message fom Rest\r\n            if(response.ok) {\r\n                callMessage.innerHTML = parse.message;\r\n                callMessage.classList.add(\"success\");\r\n\r\n                updateListAdmin(callWord);\r\n                clearAllMessages(callWord);\r\n\r\n            } else {\r\n                callMessage.innerHTML = parse.message;\r\n                callMessage.classList.add(\"error\");\r\n            }\r\n            \r\n        });\r\n\r\n    });\r\n}\r\n\r\n\r\n\r\n"]}